name: Build LLVM

on:
  workflow_dispatch: 

env:
  LLVM_VERSION: 18.1.8
  LLVM_PROJECTS: 'clang;lldb'
  LLVM_TARGETS: 'clang-format lldb lldb-server'

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup for macOS
        if: runner.os == 'macOS'
        run: |
          brew install cmake ninja
      - name: Setup for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y cmake ninja-build
      - name: Setup for Windows
        if: runner.os == 'Windows'
        run: |
          choco install cmake ninja curl
      - name: Get llvm
        shell: bash
        run: |
          curl -L https://github.com/llvm/llvm-project/releases/download/llvmorg-$LLVM_VERSION/llvm-project-$LLVM_VERSION.src.tar.xz -o llvm.tar.xz
          mkdir llvm
          tar -C llvm --strip-components=1 -xJf llvm.tar.xz
      - name: Generate build files
        shell: bash
        run: |
          cd llvm
          cmake -B build llvm -GNinja -DLLVM_ENABLE_PROJECTS="$LLVM_PROJECTS" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DLLDB_INCLUDE_TESTS=OFF 
      - name: Build targets
        shell: bash
        run: |
          cd llvm/build
          ninja $LLVM_TARGETS

      
